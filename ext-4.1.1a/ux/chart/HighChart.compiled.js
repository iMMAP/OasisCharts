/**
 * @author Joe Kuan (improved & ported from ExtJs 3 highchart adapter)
 * @email kuan.joe@gmail.com
 * @version 1.0
 * @date 8 May 2012
 *
 * You are not permitted to remove the author section from this file.
 */

if(!Array.prototype.indexOf)Array.prototype.indexOf=function(a,c){var b=this.length,d=Number(c)||0,d=d<0?Math.ceil(d):Math.floor(d);for(d<0&&(d+=b);d<b;d++)if(d in this&&this[d]===a)return d;return-1};
Ext.define("Chart.ux.HighChart",{extend:"Ext.Component",alias:["widget.highchart"],debug:!0,debugOn:function(){this.debug=!0},log:function(a){typeof console!=="undefined"&&this.debug&&console.log(a)},defaultSerieType:null,resizable:!0,updateDelay:0,loadMask:!1,refreshOnChange:!1,refreshOnLoad:!0,animation:!0,initAnim:!0,updateAnim:!0,lineShift:!1,initAnimAfterLoad:!0,afterChartRendered:null,config:{title:"",subTitle:""},constructor:function(a){a.listeners&&(this.afterChartRendered=a.listeners.afterChartRendered);
this.afterChartRendered&&(this.afterChartRendered=Ext.bind(this.afterChartRendered,this));if(a.animation==!1)this.initAnimAfterLoad=this.updateAnim=this.initAnim=this.animation=!1;this.callParent(arguments)},initComponent:function(){if(this.store)this.store=Ext.data.StoreManager.lookup(this.store);if(this.animation==!1)this.initAnimAfterLoad=this.updateAnim=this.initAnim=!1;this.callParent(arguments)},addSeries:function(a,c){for(var c=c===null||c===!0?!0:!1,b=[],d=[],e,f=0;f<a.length;f++){var h=a[f];
h.serieCls?e=h:(e=h.type!=null||this.defaultSerieType!=null?Chart.ux.HighChart.Series.get(h.type!=null?h.type:this.defaultSerieType):Chart.ux.HighChart.Serie,e=Ext.create(e,h));d.push(e.config);b.push(e)}if(this.chart){c?(this.chartConfig.series=this.chartConfig.series?this.chartConfig.series.concat(d):d,this.series=this.series?this.series.concat(b):b):(this.removeAllSeries(),this.series=b,this.chartConfig.series=d);for(f=0;f<d.length;f++)this.chart.addSeries(d[f],!0);this.refresh()}else c?(this.chartConfig.series=
this.chartConfig.series?this.chartConfig.series.concat(d):d,this.series=this.series?this.series.concat(b):b):(this.chartConfig.series=d,this.series=b)},removeSerie:function(a,c){c=c||!0;this.chart&&(this.chart.series[a].remove(c),this.chartConfig.series.splice(a,1));this.series.splice(a,1)},removeAllSeries:function(){for(var a=this.series.length,c=0;c<a;c++)this.removeSerie(0)},setTitle:function(a){this.chartConfig.title?this.chartConfig.title.text=a:this.chartConfig.title={text:a};this.chart&&this.chart.container&&
this.draw()},setSubTitle:function(a){this.chartConfig.subtitle?this.chartConfig.subtitle.text=a:this.chartConfig.subtitle={text:a};this.chart&&this.chart.container&&this.draw()},initEvents:function(){if(this.loadMask)this.loadMask=new Ext.LoadMask(this.el,Ext.apply({store:this.store},this.loadMask))},afterRender:function(){this.store&&this.bindStore(this.store,!0);this.callParent(arguments);this.bindComponent(!0);Ext.apply(this.chartConfig.chart,{renderTo:this.el.dom});Ext.applyIf(this.chartConfig,
{xAxis:[{}]});this.xField&&this.store&&this.updatexAxisData();this.series?this.addSeries(this.series,!1):this.series=[];this.initEvents();this.update(0)},onMove:function(){},buildInitData:function(){if(this.store&&!this.store.isLoading()&&this.chartConfig&&!(this.initAnim===!1||this.chartConfig.chart.animation===!1)){var a=[],c=this.series.length,b,d=this.store.data.items;for(b=0;b<c;b++){this.chartConfig.series[b].data=[];var e=this.series[b].type||this.chartConfig.chart.defaultSeriesType,a=this.chartConfig.series[b].data=
this.chartConfig.series[b].data||{};if(e)switch(e){case "line":case "spline":case "area":case "areaspline":case "scatter":case "bar":case "column":var f=this.series[b].yField||this.series[b].dataIndex;if(this.series[b].xField)for(var h=this.series[b].xField,e=0;e<d.length;e++){var g=d[e];a.push([g.data[h],g.data[f]])}else if(this.series[b].yField||this.series[b].dataIndex){for(e=0;e<d.length;e++)g=d[e],a.push(g.data[f]);a=Ext.isArray(this.chartConfig.xAxis)?this.chartConfig.xAxis[0]:this.chartConfig.xAxis;
if(this.xField&&(!a.categories||a.categories.length<d.length)){a.categories=a.categories||[];for(e=0;e<d.length;e++)a.categories.push(d[e].data[this.xField])}}break;case "pie":var h=this.series[b].categorieField,f=this.series[b].dataField,k=this.series[b].colorField;if(this.series[b].totalDataField){for(var i={},e=0;e<d.length;e++){var g=d[e],j=g.data[h];i[j]=i[j]||{total:0};i[j].total+=g.data[f];k&&(i[j].color=g.data[k])}for(var l in i)j={name:l,y:i[l].total},i[l].color&&(j.color=i[l].color),a.push(j)}else for(e=
0;e<d.length;e++)g=d[e],j={name:g.data[h],y:g.data[f]},k&&(j.color=g.data[k]),a.push(j);break;case "columnrange":case "arearange":case "areasplinerange":h=this.series[b].xField;if(Ext.isArray(this.series[b].dataIndex)){f=this.series[b].dataIndex[0];k=this.series[b].dataIndex[1];for(e=0;e<d.length;e++)g=d[e],i=g.data[f],j=g.data[k],h?i>j?a.push([g.data[h],j,i]):a.push([g.data[h],i,j]):i>j?a.push([j,i]):a.push([i,j])}else if(this.series[b].minDataIndex&&this.series[b].maxDataIndex){f=this.series[b].minDataIndex;
k=this.series[b].maxDataIndex;for(e=0;e<d.length;e++)g=d[e],i=g.data[f],j=g.data[k],h?a.push([g.data[h],i,j]):a.push([i,j])}a=Ext.isArray(this.chartConfig.xAxis)?this.chartConfig.xAxis[0]:this.chartConfig.xAxis;if(this.xField&&!h&&(!a.categories||a.categories.length<d.length)){a.categories=a.categories||[];for(e=0;e<d.length;e++)a.categories.push(d[e].data[this.xField])}}}}},draw:function(){this.log("call draw");if(this.chart&&this.rendered){if(this.resizable){for(var a=0;a<this.series.length;a++)this.series[a].visible=
this.chart.series[a].visible;this.chart.destroy();delete this.chart;this.buildInitData();this.chart=new Highcharts.Chart(this.chartConfig,this.afterChartRendered)}}else if(this.rendered)if(this.initAnimAfterLoad){this.log("initAnimAfterLoad is on, defer creating chart");return}else this.buildInitData(),this.chart=new Highcharts.Chart(this.chartConfig,this.afterChartRendered),this.log("initAnimAfterLoad is off, creating chart from fresh");for(a=0;a<this.series.length;a++)this.series[a].visible||this.chart.series[a].hide();
this.store.isLoading()||(this.log("Call refresh from draw"),this.refresh())},onContainerResize:function(){this.draw()},updatexAxisData:function(){var a=[],c=this.store.data.items;if(this.xField&&this.store){for(var b=0;b<c.length;b++)a.push(c[b].data[this.xField]);this.chart?this.chart.xAxis[0].setCategories(a,!0):Ext.isArray(this.chartConfig.xAxis)?this.chartConfig.xAxis[0].categories=a:this.chartConfig.xAxis.categories=a}},bindComponent:function(a){var c=function(a){return a.ownerCt?c(a.ownerCt):
a},b=c(this);if(a){if(b.on("move",this.onMove,this),b.on("resize",this.onResize,this),this.ownerCt)this.ownerCt.on("render",this.update,this)}else this.ownerCt&&this.ownerCt.un("render",this.update,this),b.un("move",this.onMove,this)},bindStore:function(a,c){!c&&this.store&&(a!==this.store&&this.store.autoDestroy?this.store.destroy():(this.store.un("datachanged",this.onDataChange,this),this.store.un("load",this.onLoad,this),this.store.un("add",this.onAdd,this),this.store.un("remove",this.onRemove,
this),this.store.un("update",this.onUpdate,this),this.store.un("clear",this.onClear,this)));a&&(a=Ext.StoreMgr.lookup(a),a.on({scope:this,load:this.onLoad,datachanged:this.onDataChange,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,clear:this.onClear}));(this.store=a)&&!c&&this.refresh()},refresh:function(){this.log("Call refresh ");if(this.store&&this.chart){var a=[],c=this.series.length,b;for(b=0;b<c;b++)a.push([]);for(var d=this.store.data.items,e=[],f=0;f<d.length;f++){var h=d[f];this.xField&&
e.push(h.data[this.xField]);for(b=0;b<c;b++){var g=this.series[b];g.type=="pie"&&g.useTotals&&(f==0&&g.clear(),g.getData(h,f));g.type=="pie"&&g.totalDataField?g.getData(h,a[b]):(g.type=="gauge"?a[b][0]=g.getData(h,f):g.data&&g.data.length?g.data[f]!==void 0?a[b].push(g.data[f]):a[b].push(null):(g=g.getData(h,f),a[b].push(g)),console.log(a[b][f]))}}if(this.updateAnim){for(b=0;b<c;b++)if(this.series[b].useTotals)this.chart.series[b].setData(this.series[b].getTotals());else if(a[b].length>0)if(this.lineShift){var k=
Ext.isArray(this.chart.xAxis)?this.chart.xAxis[0]:this.chart.xAxis,g=-1;if(k.categories){for(f=0;f<e.length;f++){for(var i=!1,h=0;h<k.categories.length;h++)if(e[f]==k.categories[h]){i=!0;break}if(!i){g=f;break}}this.log("startIdx "+g);if(g!==-1&&g<e.length)for(f=g;f<e.length;f++)this.chart.series[b].addPoint({y:a[b][f],category:e[f]},!1,!0,!0)}else{k=this.chart.series[b].points;for(f=0;f<a[b].length;f++){i=!1;for(h=0;h<k.length;h++)if(a[b][f][0]==k[h].x){i=!0;break}if(!i){g=f;break}}this.log("startIdx "+
g);if(g!==-1&&g<a[b].length)for(f=g;f<a[b].length;f++)this.chart.series[b].addPoint(a[b][f],!1,!0,!0)}}else{g=this.chart.series[b].points.length;i=d.length;for(f=0;f<Math.min(g,i);f++)this.chart.series[b].points[f].update(a[b][f],!1,!0);if(i>g)for(h=0;h<i-g;h++,f++)this.chart.series[b].addPoint(a[b][f],!1,!1,!0);else if(g>i)for(h=0;h<g-i;h++)this.chart.series[b].points[this.chart.series[b].points.length-1].remove(!1,!0)}this.xField&&this.chart.xAxis[0].setCategories(e,!0);this.chart.redraw()}else{for(b=
0;b<c;b++)this.series[b].useTotals?this.chart.series[b].setData(this.series[b].getTotals()):a[b].length>0&&this.chart.series[b].setData(a[b],b==c-1);this.xField&&this.chart.xAxis[0].setCategories(e,!0)}}},refreshRow:function(a){var c=this.store.indexOf(a);if(this.chart){for(var b=0;b<this.chart.series.length;b++){var d=this.chart.series[b],e=this.series[b].getData(a,c);this.series[b].type=="pie"&&this.series[b].useTotals?(this.series[b].update(a),this.chart.series[b].setData(this.series[b].getTotals())):
d.data[c].update(e)}this.xField&&this.updatexAxisData()}},update:function(a){a=a||this.updateDelay;if(!this.updateTask)this.updateTask=new Ext.util.DelayedTask(this.draw,this);this.updateTask.delay(a)},onDataChange:function(){this.refreshOnChange&&this.refresh()&&this.log("onDataChange")},onClear:function(){console.log("onClear");this.refresh()},onUpdate:function(a,c){console.log("onUpdate");this.refreshRow(c)},onAdd:function(a,c,b){console.log("onAdd");for(var a=!1,d=[],e=0;e<c.length;e++){var f=
c[e];e==c.length-1&&(a=!0);this.xField&&d.push(f.data[this.xField]);for(var h=0;h<this.chart.series.length;h++){var g=this.chart.series[h],k=this.series[h],i=k.getData(f,b+e);k.type=="pie"&&k.useTotals||g.addPoint(i,a)}}this.xField&&this.chart.xAxis[0].setCategories(d,!0)},onResize:function(){this.callParent(arguments);this.update()},onRemove:function(a,c,b){for(a=0;a<this.series.length;a++){var d=this.series[a];d.type=="pie"&&d.useTotals?(d.removeData(c,b),this.chart.series[a].setData(d.getTotals())):
this.chart.series[a].data[b].remove(!0)}Ext.each(this.chart.series,function(a){a.data[b].remove(!0)});this.xField&&this.updatexAxisData()},onLoad:function(){!this.chart&&this.initAnimAfterLoad?(this.log("Call refresh from onLoad for initAnim"),this.buildInitData(),this.chart=new Highcharts.Chart(this.chartConfig,this.afterChartRendered)):(this.log("Call refresh from onLoad"),this.refreshOnLoad&&this.refresh())},destroy:function(){delete this.series;this.chart&&(this.chart.destroy(),delete this.chart);
this.bindStore(null);this.bindComponent(null);this.callParent(arguments)}});Chart.ux.HighChart.Series=function(){var a=[],c=[];return{reg:function(b,d){a.push(d);c.push(b)},get:function(b){return a[c.indexOf(b)]}}}();
Ext.define("Chart.ux.HighChart.Serie",{type:null,pointObject:!1,xField:null,yField:null,visible:!0,clear:Ext.emptyFn,obj_getData:function(a){var c={data:a.data,y:a.data[this.yField||this.dataIndex]};this.xField&&(c.x=a.data[this.xField]);this.colorField&&(c.color=a.data[this.colorField]);return c},arr_getDataSingle:function(a){return a.data[this.yField]},arr_getDataPair:function(a){return[a.data[this.xField],a.data[this.yField]]},serieCls:!0,constructor:function(a){a.type=this.type;if(!a.data)a.data=
[];Ext.apply(this,a);this.config=a;this.yField=this.yField||this.dataIndex;if(!this.getData)this.getData=this.pointObject?this.obj_getData:this.xField?this.arr_getDataPair:this.arr_getDataSingle}});
Ext.define("Chart.ux.HighChart.RangeSerie",{extend:"Chart.ux.HighChart.Serie",minDataIndex:null,maxDataIndex:null,needSorting:null,constructor:function(a){if(Ext.isArray(a.dataIndex))this.field1=a.dataIndex[0],this.field2=a.dataIndex[1],this.needSorting=!0;else if(a.minDataIndex&&a.maxDataIndex)this.minDataIndex=a.minDataIndex,this.maxDataIndex=a.maxDataIndex,this.needSorting=!1;this.callParent(arguments)},getData:function(a){if(this.needSorting===!0)return a.data[this.field1]>a.data[this.field2]?
[a.data[this.field2],a.data[this.field1]]:[a.data[this.field1],a.data[this.field2]];if(a.data[this.minDataIndex]!==void 0&&a.data[this.maxDataIndex]!==void 0)return[a.data[this.minDataIndex],a.data[this.maxDataIndex]]}});Chart.ux.HighChart.version="2.0";Ext.define("Chart.ux.HighChart.SplineSerie",{extend:"Chart.ux.HighChart.Serie",type:"spline"});Chart.ux.HighChart.Series.reg("spline","Chart.ux.HighChart.SplineSerie");
Ext.define("Chart.ux.HighChart.ColumnSerie",{extend:"Chart.ux.HighChart.Serie",type:"column"});Chart.ux.HighChart.Series.reg("column","Chart.ux.HighChart.ColumnSerie");Ext.define("Chart.ux.HighChart.BarSerie",{extend:"Chart.ux.HighChart.Serie",type:"bar"});Chart.ux.HighChart.Series.reg("bar","Chart.ux.HighChart.BarSerie");Ext.define("Chart.ux.HighChart.LineSerie",{extend:"Chart.ux.HighChart.Serie",type:"line"});Chart.ux.HighChart.Series.reg("line","Chart.ux.HighChart.LineSerie");
Ext.define("Chart.ux.HighChart.AreaSerie",{extend:"Chart.ux.HighChart.Serie",type:"area"});Chart.ux.HighChart.Series.reg("area","Chart.ux.HighChart.AreaSerie");Ext.define("Chart.ux.HighChart.AreaSplineSerie",{extend:"Chart.ux.HighChart.Serie",type:"areaspline"});Chart.ux.HighChart.Series.reg("areaspline","Chart.ux.HighChart.AreaSplineSerie");Ext.define("Chart.ux.HighChart.GaugeSerie",{extend:"Chart.ux.HighChart.Serie",type:"gauge"});Chart.ux.HighChart.Series.reg("gauge","Chart.ux.HighChart.GaugeSerie");
Ext.define("Chart.ux.HighChart.AreaRangeSerie",{extend:"Chart.ux.HighChart.RangeSerie",type:"arearange"});Chart.ux.HighChart.Series.reg("arearange","Chart.ux.HighChart.AreaRangeSerie");Ext.define("Chart.ux.HighChart.AreaSplineRangeSerie",{extend:"Chart.ux.HighChart.RangeSerie",type:"areasplinerange"});Chart.ux.HighChart.Series.reg("areasplinerange","Chart.ux.HighChart.AreaSplineRangeSerie");Ext.define("Chart.ux.HighChart.ColumnRangeSerie",{extend:"Chart.ux.HighChart.RangeSerie",type:"columnrange"});
Chart.ux.HighChart.Series.reg("columnrange","Chart.ux.HighChart.ColumnRangeSerie");Ext.define("Chart.ux.HighChart.ScatterSerie",{extend:"Chart.ux.HighChart.Serie",type:"scatter"});Chart.ux.HighChart.Series.reg("scatter","Chart.ux.HighChart.ScatterSerie");
Ext.define("Chart.ux.HighChart.PieSerie",{extend:"Chart.ux.HighChart.Serie",type:"pie",categorieField:null,totalDataField:!1,dataField:null,useTotals:!1,columns:[],constructor:function(a){this.callParent(arguments);if(this.useTotals){this.columnData={};for(var c=this.columns.length,b=0;b<c;b++)this.columnData[this.columns[b]]=100/c}},addData:function(a){for(var c=0;c<this.columns.length;c++){var b=this.columns[c];this.columnData[b]+=a.data[b]}},update:function(a){for(var c=0;c<this.columns.length;c++){var b=
this.columns[c];a.modified[b]&&(this.columnData[b]=this.columnData[b]+a.data[b]-a.modified[b])}},removeData:function(a){for(var c=0;c<this.columns.length;c++){var b=this.columns[c];this.columnData[b]-=a.data[b]}},clear:function(){for(var a=0;a<this.columns.length;a++)this.columnData[this.columns[a]]=0},getData:function(a,c){if(this.totalDataField){for(var b=null,d=0;d<c.length;d++)if(c[d].name==a.data[this.categorieField]){b=d;c[d].y+=a.data[this.dataField];break}b===null&&(this.colorField&&a.data[this.colorField]?
c.push({name:a.data[this.categorieField],y:a.data[this.dataField],color:a.data[this.colorField]}):c.push({name:a.data[this.categorieField],y:a.data[this.dataField]}),d=c.length-1);return c[d]}return this.useTotals?(this.addData(a),[]):this.colorField&&a.data[this.colorField]?{name:a.data[this.categorieField],y:a.data[this.dataField],color:a.data[this.colorField]}:{name:a.data[this.categorieField],y:a.data[this.dataField]}},getTotals:function(){for(var a=[],c=0;c<this.columns.length;c++){var b=this.columns[c];
a.push([b,this.columnData[b]])}return a}});Chart.ux.HighChart.Series.reg("pie",Chart.ux.HighChart.PieSerie);
